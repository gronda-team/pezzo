include:
  - ./docker-compose.infra.yaml

services:
  pezzo-server:
    image: ghcr.io/pezzolabs/pezzo/server:latest
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
    restart: always
    env_file:
      - ./.env
      - ./.env.local
      - ./apps/server/.env
      - ./apps/server/.env.local
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/pezzo
      - SUPERTOKENS_CONNECTION_URI=http://supertokens:3567
      - CLICKHOUSE_HOST=clickhouse
      - REDIS_URL=redis://redis-stack-server:6379
      - KMS_LOCAL_ENDPOINT=http://local-kms:9981
    ports:
      - "3000:3000"
    depends_on:
      pezzo-prisma-migrate:
        condition: service_completed_successfully
      pezzo-clickhouse-migrate:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      supertokens:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      redis-stack-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl 'http://pezzo-server:3000/api/healthz'"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.pezzo-server.rule=Host(`${PEZZO_SERVER_DOMAIN}`)
        - traefik.http.routers.pezzo-server.entrypoints=https
        - traefik.http.routers.pezzo-server.tls.certresolver=le
        - traefik.http.services.pezzo-server.loadbalancer.server.port=3000
        - traefik.http.services.pezzo-server.loadbalancer.passHostHeader=true
        - traefik.http.routers.pezzo-server.service=pezzo-server

  pezzo-console:
    image: ghcr.io/pezzolabs/pezzo/console:latest
    build:
      context: .
      dockerfile: ./apps/console/Dockerfile
    restart: always
    env_file:
      - ./.env
      - ./apps/console/.env
    ports:
      - "4200:8080"
    depends_on:
      pezzo-server:
        condition: service_healthy
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.pezzo-console.rule=Host(`${PEZZO_CONSOLE_DOMAIN}`)
        - traefik.http.routers.pezzo-console.entrypoints=https
        - traefik.http.routers.pezzo-console.tls.certresolver=le
        - traefik.http.services.pezzo-console.loadbalancer.server.port=4200
        - traefik.http.services.pezzo-console.loadbalancer.passHostHeader=true
        - traefik.http.routers.pezzo-console.service=pezzo-console

  pezzo-proxy:
    image: ghcr.io/pezzolabs/pezzo/proxy:latest
    build:
      context: .
      dockerfile: ./apps/proxy/Dockerfile
    restart: always
    env_file:
      - ./.env
      - ./apps/proxy/.env
    ports:
      - "3001:3000"
    depends_on:
      pezzo-server:
        condition: service_healthy
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.pezzo-proxy.rule=Host(`${PEZZO_PROXY_DOMAIN}`)
        - traefik.http.routers.pezzo-proxy.entrypoints=https
        - traefik.http.routers.pezzo-proxy.tls.certresolver=le
        - traefik.http.services.pezzo-proxy.loadbalancer.server.port=3001
        - traefik.http.services.pezzo-proxy.loadbalancer.passHostHeader=true
        - traefik.http.routers.pezzo-proxy.service=pezzo-proxy
